{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GIfExpertApp.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","target","value","type","onChange","console","log","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFethGifs","GIfExpertApp","categories","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OAEQ,sBAAMC,SAXO,SAACC,GACtBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAcE,EAAEK,OAAOC,MAAM,MAMzB,SACI,uBAAOC,KAAK,OAAOD,MAAOT,EAAYW,SAjB9B,SAACR,GACjBF,EAAcE,EAAEK,OAAOC,OACvBG,QAAQC,IAAIb,S,+BCTPc,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCYLO,EAVK,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE3B,OADFL,QAAQC,IAAKc,EAAOV,GAElB,sBAAKc,UAAU,8CAAf,UACQ,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QC0BFO,EA3BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHP,SAAEA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KA6BtC,OAvBAC,qBAAY,WACRxB,EAASC,GACRwB,MAAM,SAAAC,GAEHC,YAAY,WACRJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAGf,UAIP,CAACpB,IASGqB,EDvByBM,CAAa3B,GAAhCa,EAHiB,EAGtBN,KAAaa,EAHS,EAGTA,QAIrB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAwDhB,IAEtDoB,GAAW,wCAIb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEQ/BiB,EA3BM,WAAO,IAAD,EAEU5C,mBAAS,CAAC,cAFpB,mBAElB6C,EAFkB,KAEN9C,EAFM,KAUvB,OACA,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAASA,SAAWA,GAAiBA,YCZtC8B,G,MARH,WACV,OACE,8BACI,cAAC,EAAD,QCFRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc0637b6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handlehange = (e) => {\r\n        setInputValue(e.target.value)\r\n        console.log(inputValue);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    if ( inputValue.trim().length > 2 ){\r\n        setCategories( cats =>[inputValue, ...cats]);\r\n        setInputValue(e.target.value=\"\")\r\n    }\r\n  \r\n    }\r\n    return (\r\n        \r\n            <form onSubmit={ handleSubmit }>\r\n                <input type=\"text\" value={inputValue} onChange={handlehange} />\r\n            </form>        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n\r\n","export const getGift = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=waKAr0SDoB9n4nRtgZhjizpwvVQjHBEx`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n   \r\n\r\n}\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( { title, url } ) => {\r\n  console.log( title, url);\r\n    return (\r\n    <div className='card animate__animated animate__backInLeft '>\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem","\r\nimport { useFethGifs } from '../hooks/useFetchGifs'\r\n// import { getGift } from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data:images, loading }= useFethGifs( category );\r\n  \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__backInLeft\" >{category}</h3>\r\n\r\n            { loading && <p>Loading</p> }\r\n\r\n    \r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid","import { useState, useEffect } from 'react'\r\nimport { getGift } from '../helpers/getGifs';\r\n\r\nexport const useFethGifs = ( category ) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect ( () =>{\r\n        getGift( category )\r\n        .then( imgs => {\r\n        \r\n            setTimeout (()=> {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n       \r\n            },3000)\r\n            \r\n   \r\n        })\r\n    }, [category])\r\n\r\n    // setTimeout ( () => {\r\n    //     setState({\r\n    //         data:[1,2,3,4,5,6],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000 );\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GIfExpertApp = () => {\r\n  \r\n  const [categories, setCategories] =useState(['One Punch']);\r\n  \r\n// const handleAdd = () =>{\r\n//     setCategories([...categories, 'deividMan'])\r\n    \r\n// }\r\n\r\n\r\n    return (\r\n    <>\r\n    <h2>GifExpertApp</h2>    \r\n    <AddCategory setCategories={setCategories}  />\r\n    <hr/>\r\n    \r\n    <ol>\r\n        {\r\n            categories.map( category => (\r\n                <GifGrid category={ category } key={ category }/>\r\n             ) )\r\n        }\r\n    </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GIfExpertApp","import React from 'react'\nimport GIfExpertApp from './GIfExpertApp'\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n        <GIfExpertApp/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}